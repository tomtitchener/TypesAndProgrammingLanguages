id = (λx.x);
tru = (λt.λf.t);
fls = (λt.λf.f);
test = (λl.λm.λn. l m n);
zero = (λs.λz.z);
one = (λs.λz.s z);
two = (λs.λz.s (s z));
three = (λs.λz.s (s (s z)));
four = (λs.λz.s (s (s (s z))));
nine = (λs.λz.s (s (s (s (s (s (s (s (s z)))))))));
scc = (λn.λs.λz.s (n s z));
scc' = (λn.λs.λz.n s (s z));
plus = (λm.λn.λs.λz. m s (n s z));
times = (λm.λn.λs. m (n s));
exp = (λm.λn.n (times m) one);
iszro = (λm.m (λx. fls) tru);
and = (λb.λc. b c fls);
or = (λb.λc. b tru c);
not = (λb. b fls tru);
pair = (λf.λs.λb. b f s);
fst = (λp. p tru);
snd = (λp. p fls);
zz = (pair zero zero);
ss = (λp. pair (snd p) (plus one (snd p)));
prd = (λm.fst (m ss zz));
m = (λm.m);
n = (λn.n);
(id id);
((λt.λf.t) (λx.x));
(tru (λt.t));
((λf.λt.t) (λf.f));
(id (id (λz. id z)));
((λt.λf.t) (λl.l) (λr.r));
(tru (λt.t) (λf.f));
(fls (λt.t) (λf.f));
(test tru (λv.v) (λw.w));
(test fls (λv.v) (λw.w));
(scc zero);
(scc' zero);
(and tru tru);
(and tru fls);
(and fls tru);
(and fls fls);
(or tru tru);
(or tru fls);
(or fls tru);
(or fls fls);
(not tru);
(not fls);
(not (not tru));
(not (not fls));
(test tru m n);
(test fls m n);
(fst (pair m n));
(snd (pair m n));
(plus zero zero);
(plus zero one);
(plus one one);
(plus one two);
(plus two two);
(times two two);
(times zero zero);
(times zero four);
(times one one);
(times one two);
(exp two two);
(exp one two);
(exp one one);
(exp three three);
(iszro one);
(iszro zero);
(prd zero);
(prd one);
(prd two);
(fst (three ss zz));
(fst (four ss zz));
(prd three);

